# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master-v8
- dev-v8
- release/*
- feature/*

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'src/Our.Umbraco.DataAnnotations/Our.Umbraco.DataAnnotations.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Restore solution'
  inputs:
    command: 'restore'
    projects: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: 'build'
    projects: '$(solution)'
    configuration: '$(buildConfiguration)'
    arguments: '--no-restore'

- task: DotNetCoreCLI@2
  displayName: 'Dotnet pack'
  inputs:
    command: 'pack'
    projects: |
      $(solution)
    includesymbols: true
    configuration: '$(buildConfiguration)'
    nobuild: true
    outputDir: '.\build\$(buildConfiguration)\nuget'
    arguments: '--no-restore'

- task: YarnInstaller@3
  displayName: 'Download yarn installer'
  inputs:
    versionSpec: '1.x'

- task: Yarn@3
  displayName: 'Run yarn'
  inputs:
    projectDirectory: 'build'

- task: Grunt@0
  displayName: 'Run grunt publish task'
  inputs:
    gruntFile: 'build/gruntfile.js'
    targets:
    gruntCli: 'node_modules/grunt-cli/bin/grunt'

- task: CopyFiles@2
  displayName: 'Copy files to staging directory'
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: 'build/$(buildConfiguration)/**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish staging directory to artifacts'
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: drop